services:
  discovery:
    container_name: discovery
    image: servicediscovery
    ports:
      - "8000:8000"
    restart: always
    networks:
      - alumni
    environment:
      - PORT=8000
      - EUREKA_URI=http://discovery:8000/eureka

  config:
    container_name: config
    image: configserver
    ports:
      - "8001:8001"
    restart: always
    depends_on:
      - discovery
    networks:
      - alumni
    environment:
      - PORT=8001
      - EUREKA_URI=http://discovery:8000/eureka
      - EVENT_PORT=8801
      - EVENT_DB_URL=eventsdb:3306
      - EVENT_DB_NAME=eventsDb
      - EVENT_DB_USER=root
      - EVENT_DB_PASSWORD=1
      - JOB_PORT=8803
      - JOB_DB_URL=eventsdb:3306
      - JOB_DB_NAME=eventsDb
      - JOB_DB_USER=root
      - JOB_DB_PASSWORD=1

  apigateway:
    container_name: apigateway
    image: apigateway
    ports:
      - "8002:8002"
    restart: always
    depends_on:
      - discovery
      - config
    networks:
      - alumni
    environment:
      - PORT=8002
      - EUREKA_URI=http://discovery:8000/eureka

  survey:
    container_name: survey
    image: survey
    ports:
      - "8806:8806"
    restart: always
    depends_on:
      - discovery
      - config
      - apigateway
      - surveydb
      - userservice
    networks:
      - alumni
      - survey
    environment:
      - PORT=8804
      - EUREKA_URI=http://discovery:8000/eureka
      - CONFIG_URI=http://config:8001
      - SURVEY_DB_URL=surveydb:3306
      - SURVEY_DB_NAME=surveyDb
      - SURVEY_DB_USER=root

  newsannouncements:
    container_name: newsannouncements
    image: newsannouncements
    ports:
      - "8808:8808"
    restart: always
    depends_on:
      - discovery
      - config
      - apigateway
      - newsannouncementsdb
    networks:
      - alumni
      - newsannouncements
    environment:
      - PORT=8805
      - EUREKA_URI=http://discovery:8000/eureka
      - CONFIG_URI=http://config:8001
      - NEWANN_DB_URL=newsannouncementsdb:3306
      - NEWANN_DB_NAME=newsAnnouncementsDb
      - NEWANN_DB_USER=root
      - NEWANN_DB_PASSWORD=1

  insights:
    container_name: insights
    image: insights
    ports:
      - "8807:8807"
    restart: always
    depends_on:
      - discovery
      - config
      - apigateway
      - insightsdb
    networks:
      - alumni
      - insights
    environment:
      - PORT=8807
      - EUREKA_URI=http://discovery:8000/eureka
      - CONFIG_URI=http://config:8001
      - INSIGHT_DB_URL=insightsdb:3306
      - INSIGHT_DB_NAME=insightsdb
      - INSIGHT_DB_USER=root
      - INSIGHT_DB_PASSWORD=1

  eventservice:
    container_name: eventservice
    image: eventservice
    ports:
      - "8801:8801"
    restart: always
    depends_on:
      - discovery
      - config
      - apigateway
      - eventsdb
      - userservice
    networks:
      - alumni
      - events
    environment:
      - PORT=8801
      - EUREKA_URI=http://discovery:8000/eureka
      - CONFIG_URI=http://config:8001
      - EVENT_DB_URL=eventsdb:3306
      - EVENT_DB_NAME=eventsdb
      - EVENT_DB_USER=root
      - EVENT_DB_PASSWORD=1

  jobservice:
    container_name: jobservice
    image: jobservice
    ports:
      - "8803:8803"
    restart: always
    depends_on:
      - discovery
      - config
      - apigateway
      - userservice
      - jobsdb
    networks:
      - alumni
      - jobs
    environment:
      - PORT=8803
      - EUREKA_URI=http://discovery:8000/eureka
      - CONFIG_URI=http://config:8001
      - JOB_DB_URL=jobsdb:3306
      - JOB_DB_NAME=jobsdb
      - JOB_DB_USER=root
      - JOB_DB_PASSWORD=1

  chatservice:
    container_name: chatservice
    image: chatservice
    ports:
      - "8809:8809"
    restart: always
    depends_on:
      - discovery
      - config
      - chatdb
      - apigateway
      - userservice
      - prometheus
      - grafana
    volumes:
      - ./chat-service/logs:/app/logs
    networks:
      - alumni
      - chat
    environment:
      - PORT=8809
      - EUREKA_URI=http://discovery:8000/eureka
      - CONFIG_URI=http://config:8001
      - CHAT_DB_URL=chatdb:3306
      - CHAT_DB_NAME=chatDB
      - CHAT_DB_USER=root
      - CHAT_DB_PASSWORD=1

  userservice:
    container_name: userservice
    image: userservice
    ports:
      - "8802:8802"
    restart: always
    depends_on:
      - discovery
      - config
      - apigateway
      - usersdb
    networks:
      - alumni
      - users
    environment:
      - PORT=8802
      - EUREKA_URI=http://discovery:8000/eureka
      - CONFIG_URI=http://config:8001
      - USER_DB_URL=usersdb:3306
      - USER_DB_NAME=usersdb
      - USER_DB_USER=root
      - USER_DB_PASSWORD=1

  insightsdb:
    container_name: insightsdb
    image: mysql
    ports:
      - "9907:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=1
    restart: always
    networks:
      - insights

  newsannouncementsdb:
    container_name: newsannouncementsdb
    image: mysql
    ports:
      - "9908:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=1
    restart: always
    networks:
      - newsannouncements

  surveydb:
    container_name: surveydb
    image: mysql
    ports:
      - "9906:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=1
    restart: always
    networks:
      - survey

  eventsdb:
    container_name: eventsdb
    image: mysql
    ports:
      - "9901:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=1
    restart: always
    networks:
      - events
  jobsdb:
    container_name: jobsdb
    image: mysql
    ports:
      - "9903:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=1
    restart: always
    networks:
      - jobs

  usersdb:
    container_name: usersdb
    image: mysql
    ports:
      - "9902:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=1
    restart: always
    networks:
      - users

  chatdb:
    container_name: chatdb
    image: mysql
    ports:
      - "9909:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=1
    restart: always
    networks:
      - chat

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "8003:9090"
    volumes:
      - ./chat-service/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - chat

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "8004:3000"
    restart: unless-stopped
    volumes:
      - ./chat-service/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    networks:
      - chat

  elasticsearch:
    image: elasticsearch:8.11.1
    mem_limit: 4g
    ports:
      - "8005:9200"
      - "8006:9300"
    networks:
      - elk-network
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false

  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.13
    ports:
      - "8007:5000"
    volumes:
      - ./chat-service/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./chat-service:/usr/share/logstash/config
      - ./chat-service/logs:/usr/share/logstash/logs
      - ./chat-service/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    command: ["-f", "/usr/share/logstash/config/logstash.conf"]
    depends_on:
      - elasticsearch
    networks:
      - elk-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.13
    ports:
      - "8008:5601"
    depends_on:
      - logstash
    networks:
      - elk-network


networks:
  alumni:
    driver: bridge
  events:
    driver: bridge
  jobs:
    driver: bridge
  users:
    driver: bridge
  chat:
    driver: bridge
  insights:
    driver: bridge
  newsannouncements:
    driver: bridge
  survey:
    driver: bridge
  elk-network:
    driver: bridge